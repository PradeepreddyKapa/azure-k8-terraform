trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
 - stage: Build
   jobs:
   - job: firstjob
     steps:
      - bash: echo Firstjob build complete
      - bash: echo $(pipelinevariable)
      - bash: echo $(Build.BuildNumber)
      - bash: echo $(Build.BuildId)
      - bash: echo $(Build.SourceBranchName)
      - bash: echo $(Build.SourceDirectory)
      - bash: echo $(System.DefaultWorkingDirectory)
      - bash: ls -R $(System.DefaultWorkingDirectory)
      - bash: echo $(Build.ArtifactStagingDirectory)
      - bash: java -version
      - bash: mvn -version
      - bash: python --version
      - bash: node --version
      - bash: ls -R $(Build.ArtifactStagingDirectory)
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: |
            **/*.yml
            **/*.tf
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      - bash: ls -R $(Build.ArtifactStagingDirectory)
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'
  #  - job: secondjob
  #    steps:
  #     - bash: echo secondjob build complete  
#  - stage: Devdeploy
#    variables:
#     environment: Dev
#    dependsOn: Build
#    jobs:
#    - job: Devdeploy
#      steps:
#      - bash: echo $(environment)deploy  complete
#  - stage: QAdeploy
#    variables:
#     environment: QA
#    dependsOn: Devdeploy
#    jobs:
#    - job: QAdeploy
#      steps:
#      - bash: echo $(environment)deploy  complete
#  - stage: proddeploy
#    variables:
#     environment: prod
#    dependsOn: 
#     - Devdeploy
#     - QAdeploy
#    jobs:
#    - job: proddeploy
#      steps:
#      - bash: echo $(environment)deploy  complete

